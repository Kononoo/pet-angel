# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: ""
    version: 0.0.1
paths:
    /v1/auth/login:
        post:
            tags:
                - AuthService
            description: |-
                登录（用户名 + 密码）
                 返回 user_id 与 JWT token；expires_in 为 token 的有效期（秒）
            operationId: AuthService_Login
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.auth.v1.LoginRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.auth.v1.LoginReply'
    /v1/auth/relogin:
        post:
            tags:
                - AuthService
            description: |-
                重新登录/校验当前登录态
                 说明：服务端从请求头读取 JWT 校验有效性，入参可为空即可。
            operationId: AuthService_Relogin
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.auth.v1.ReloginRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.auth.v1.ReloginReply'
    /v1/auth/user-info:
        get:
            tags:
                - AuthService
            description: 获取当前登录用户信息（从 JWT 中获取 user_id）
            operationId: AuthService_GetUserInfo
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.auth.v1.GetUserInfoReply'
        post:
            tags:
                - AuthService
            description: 更新当前登录用户信息（仅POST）
            operationId: AuthService_UpdateUserInfo
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.auth.v1.UpdateUserInfoRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.auth.v1.UpdateUserInfoReply'
    /v1/avatar/chat:
        post:
            tags:
                - AvatarService
            description: 发送一条聊天消息给 AI（同步返回本条消息；可选返回AI的即时回复）
            operationId: AvatarService_Chat
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.avatar.v1.ChatRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.avatar.v1.ChatReply'
    /v1/avatar/chat/stream:
        post:
            tags:
                - AvatarService
            description: |-
                流式聊天（服务端以 SSE 持续返回 AI 回复片段；前端逐段渲染）
                 备注：本接口仅支持 HTTP，GRPC 下可另行定义 bidi-stream。
            operationId: AvatarService_ChatStream
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.avatar.v1.ChatRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.avatar.v1.ChatReply'
    /v1/avatar/items:
        get:
            tags:
                - AvatarService
            description: 获取道具列表
            operationId: AvatarService_GetItems
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.avatar.v1.GetItemsReply'
    /v1/avatar/model:
        post:
            tags:
                - AvatarService
            description: 设置当前宠物模型
            operationId: AvatarService_SetPetModel
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.avatar.v1.SetPetModelRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.avatar.v1.SetPetModelReply'
    /v1/avatar/models:
        get:
            tags:
                - AvatarService
            description: 获取可用的宠物模型列表
            operationId: AvatarService_GetModels
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.avatar.v1.GetModelsReply'
    /v1/avatar/use-item:
        post:
            tags:
                - AvatarService
            description: 使用一个道具（例如喂食/玩具等）
            operationId: AvatarService_UseItem
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.avatar.v1.UseItemRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.avatar.v1.UseItemReply'
    /v1/community/categories:
        get:
            tags:
                - CommunityService
            description: 获取帖子分类列表
            operationId: CommunityService_GetCategories
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.community.v1.GetCategoriesReply'
    /v1/community/comments/{commentId}/like:
        post:
            tags:
                - CommunityService
            description: 点赞评论
            operationId: CommunityService_LikeComment
            parameters:
                - name: commentId
                  in: path
                  description: 评论ID
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.community.v1.LikeCommentReply'
    /v1/community/comments/{commentId}/unlike:
        post:
            tags:
                - CommunityService
            description: 取消点赞评论（POST /unlike）
            operationId: CommunityService_UnlikeComment
            parameters:
                - name: commentId
                  in: path
                  description: 评论ID
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.community.v1.UnlikeCommentReply'
    /v1/community/posts:
        get:
            tags:
                - CommunityService
            description: 获取帖子列表（支持分类、类型、排序筛选）
            operationId: CommunityService_GetPostList
            parameters:
                - name: categoryId
                  in: query
                  description: 分类过滤（可空，为0或缺省则为全部分类）
                  schema:
                    type: string
                - name: postType
                  in: query
                  description: 帖子类型过滤：-1=全部 0=图文 1=视频（默认-1）
                  schema:
                    type: integer
                    format: int32
                - name: sort
                  in: query
                  description: 排序字段：created=按创建时间倒序、liked=按点赞数倒序（默认created）
                  schema:
                    type: string
                - name: page
                  in: query
                  description: 页码，从1开始（默认1）
                  schema:
                    type: integer
                    format: int32
                - name: pageSize
                  in: query
                  description: 每页条数（默认20，最大100；超出按100处理）
                  schema:
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.community.v1.GetPostListReply'
        post:
            tags:
                - CommunityService
            description: 发布帖子（图文或视频）
            operationId: CommunityService_CreatePost
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.community.v1.CreatePostRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.community.v1.CreatePostReply'
    /v1/community/posts/{postId}:
        get:
            tags:
                - CommunityService
            description: 获取帖子详情
            operationId: CommunityService_GetPostDetail
            parameters:
                - name: postId
                  in: path
                  description: 帖子ID
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.community.v1.GetPostDetailReply'
    /v1/community/posts/{postId}/comments:
        get:
            tags:
                - CommunityService
            description: 获取评论列表
            operationId: CommunityService_GetCommentList
            parameters:
                - name: postId
                  in: path
                  description: 帖子ID
                  required: true
                  schema:
                    type: string
                - name: page
                  in: query
                  description: 页码，从1开始（默认1）
                  schema:
                    type: integer
                    format: int32
                - name: pageSize
                  in: query
                  description: 每页条数（默认20，最大100）
                  schema:
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.community.v1.GetCommentListReply'
        post:
            tags:
                - CommunityService
            description: 发表评论
            operationId: CommunityService_CreateComment
            parameters:
                - name: postId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.community.v1.CreateCommentRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.community.v1.CreateCommentReply'
    /v1/community/posts/{postId}/like:
        post:
            tags:
                - CommunityService
            description: 点赞帖子
            operationId: CommunityService_LikePost
            parameters:
                - name: postId
                  in: path
                  description: 帖子ID
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.community.v1.LikePostReply'
    /v1/community/posts/{postId}/unlike:
        post:
            tags:
                - CommunityService
            description: 取消点赞帖子（POST /unlike）
            operationId: CommunityService_UnlikePost
            parameters:
                - name: postId
                  in: path
                  description: 帖子ID
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.community.v1.UnlikePostReply'
    /v1/message/list:
        get:
            tags:
                - MessageService
            description: 获取消息列表（包含聊天与小纸条）
            operationId: MessageService_GetMessageList
            parameters:
                - name: page
                  in: query
                  description: 页码，从1开始（默认1）
                  schema:
                    type: integer
                    format: int32
                - name: pageSize
                  in: query
                  description: 每页条数（默认20，最大100）
                  schema:
                    type: integer
                    format: int32
                - name: onlyNotes
                  in: query
                  description: 仅小纸条（true=只返回 message_type=1）
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.message.v1.GetMessageListReply'
    /v1/message/{messageId}/unlock:
        post:
            tags:
                - MessageService
            description: 解锁一条小纸条（message_type=1）
            operationId: MessageService_UnlockMessage
            parameters:
                - name: messageId
                  in: path
                  description: 目标消息ID
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.message.v1.UnlockMessageRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.message.v1.UnlockMessageReply'
    /v1/upload/done:
        post:
            tags:
                - UploadService
            description: 上传完成登记（占位，当前回显输入）
            operationId: UploadService_UploadDone
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.upload.v1.UploadDoneRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.upload.v1.UploadDoneReply'
    /v1/upload/file:
        post:
            tags:
                - UploadService
            description: 本地表单文件上传（multipart/form-data）
            operationId: UploadService_UploadFile
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.upload.v1.UploadFileRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.upload.v1.UploadFileReply'
    /v1/upload/presign:
        get:
            tags:
                - UploadService
            description: |-
                以下接口为兼容未来直传方案的占位
                 获取直传预签名（占位，当前返回未实现）
            operationId: UploadService_GetPresign
            parameters:
                - name: fileName
                  in: query
                  description: 原始文件名（含扩展名）
                  schema:
                    type: string
                - name: contentType
                  in: query
                  description: MIME 类型（如 image/png）
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.upload.v1.GetPresignReply'
    /v1/user/follow:
        post:
            tags:
                - UserService
            description: 关注用户
            operationId: UserService_FollowUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.v1.FollowUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.v1.FollowUserReply'
    /v1/user/unfollow:
        post:
            tags:
                - UserService
            description: 取消关注
            operationId: UserService_UnfollowUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.v1.UnfollowUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.v1.UnfollowUserReply'
    /v1/user/{userId}/follows:
        get:
            tags:
                - UserService
            description: 关注列表（用户关注的人）
            operationId: UserService_GetFollowList
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: pageSize
                  in: query
                  schema:
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.v1.GetFollowListReply'
    /v1/user/{userId}/likes:
        get:
            tags:
                - UserService
            description: 点赞列表（用户点赞过的帖子）
            operationId: UserService_GetLikeList
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: pageSize
                  in: query
                  schema:
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.v1.GetLikeListReply'
    /v1/user/{userId}/profile:
        get:
            tags:
                - UserService
            description: 用户主页信息
            operationId: UserService_GetUserProfile
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.v1.GetUserProfileReply'
components:
    schemas:
        api.auth.v1.GetUserInfoReply:
            type: object
            properties:
                userId:
                    type: string
                    description: 用户ID
                nickname:
                    type: string
                    description: 昵称
                avatar:
                    type: string
                    description: 头像URL
                modelId:
                    type: string
                    description: 当前宠物模型ID（未设置则为0）
                petName:
                    type: string
                    description: 宠物名称
                petAvatar:
                    type: string
                    description: 宠物头像URL
                petSex:
                    type: integer
                    description: 宠物性别 0未知/1男/2女
                    format: int32
                kind:
                    type: string
                    description: 宠物品类
                weight:
                    type: integer
                    description: 体重（kg）
                    format: int32
                hobby:
                    type: string
                    description: 爱好
                description:
                    type: string
                    description: 个人/宠物简介
                coins:
                    type: integer
                    description: 金币余额
                    format: int32
                createdAt:
                    type: string
                    description: 创建时间 YYYY-MM-DD HH:MM:SS
                modelUrl:
                    type: string
                    description: 当前宠物模型URL（与 pet_models.path 一致，未设置则为空）
            description: 获取用户信息响应
        api.auth.v1.LoginReply:
            type: object
            properties:
                userId:
                    type: string
                    description: 用户ID
                token:
                    type: string
                    description: 'JWT 令牌（放入后续请求 Header 的 Authorization: Bearer <token>）'
                expiresIn:
                    type: integer
                    description: 令牌有效期（单位：秒）
                    format: int32
            description: 登录响应
        api.auth.v1.LoginRequest:
            type: object
            properties:
                username:
                    type: string
                    description: 用户名（或手机号/邮箱）
                password:
                    type: string
                    description: 密码（建议 HTTPS 传输）
            description: 登录请求
        api.auth.v1.ReloginReply:
            type: object
            properties:
                expire:
                    type: boolean
                    description: true 表示已过期，需要重新登录；false 表示仍然有效
            description: 重新登录响应
        api.auth.v1.ReloginRequest:
            type: object
            properties: {}
            description: 重新登录请求（空）
        api.auth.v1.UpdateUserInfoReply:
            type: object
            properties:
                success:
                    type: boolean
            description: 更新用户信息响应
        api.auth.v1.UpdateUserInfoRequest:
            type: object
            properties:
                nickname:
                    type: string
                    description: 昵称
                avatar:
                    type: string
                    description: 头像URL
                modelId:
                    type: string
                    description: 当前宠物模型ID
                petName:
                    type: string
                    description: 宠物名称
                petAvatar:
                    type: string
                    description: 宠物头像URL
                petSex:
                    type: integer
                    description: 宠物性别 0未知/1男/2女
                    format: int32
                kind:
                    type: string
                    description: 宠物品类
                weight:
                    type: integer
                    description: 体重（kg）
                    format: int32
                hobby:
                    type: string
                    description: 爱好（如：散步、逗猫棒）
                description:
                    type: string
                    description: 个人/宠物简介
                coins:
                    type: integer
                    description: 金币余额（demo模式允许直接修改）
                    format: int32
            description: 更新用户信息请求（仅包含需要更新的字段）
        api.avatar.v1.ChatReply:
            type: object
            properties:
                messageId:
                    type: string
                    description: 本次用户消息的ID
                content:
                    type: string
                    description: 本次用户消息内容回显
                createdAt:
                    type: string
                    description: 发送时间 YYYY-MM-DD HH:MM:SS
                aiMessageId:
                    type: string
                    description: （可选）AI 回复的消息ID
                aiContent:
                    type: string
                    description: （可选）AI 回复的文本
                aiCreatedAt:
                    type: string
                    description: （可选）AI 回复时间 YYYY-MM-DD HH:MM:SS
        api.avatar.v1.ChatRequest:
            type: object
            properties:
                content:
                    type: string
                    description: 用户输入的文本内容
            description: 聊天
        api.avatar.v1.GetItemsReply:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.avatar.v1.Item'
                    description: 道具列表
        api.avatar.v1.GetModelsReply:
            type: object
            properties:
                models:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.avatar.v1.PetModel'
                    description: 模型列表
        api.avatar.v1.Item:
            type: object
            properties:
                id:
                    type: string
                    description: 道具ID
                name:
                    type: string
                    description: 道具名称
                description:
                    type: string
                    description: 描述文案
                iconPath:
                    type: string
                    description: 图标URL
                coinCost:
                    type: integer
                    description: 消耗金币
                    format: int32
            description: 道具
        api.avatar.v1.PetModel:
            type: object
            properties:
                id:
                    type: string
                    description: 模型ID
                name:
                    type: string
                    description: 模型名称
                path:
                    type: string
                    description: 模型资源URL（MinIO）
                modelType:
                    type: integer
                    description: 模型类型：0=猫 1=狗
                    format: int32
                isDefault:
                    type: boolean
                    description: 是否默认
                sortOrder:
                    type: integer
                    description: 排序序号（数值越小越靠前）
                    format: int32
            description: 宠物模型
        api.avatar.v1.SetPetModelReply:
            type: object
            properties:
                success:
                    type: boolean
                    description: 是否成功
        api.avatar.v1.SetPetModelRequest:
            type: object
            properties:
                modelId:
                    type: string
                    description: 目标模型ID
            description: 设置当前模型
        api.avatar.v1.UseItemReply:
            type: object
            properties:
                success:
                    type: boolean
                    description: 是否成功
                message:
                    type: string
                    description: 使用结果与提示（例如：喂食成功）
        api.avatar.v1.UseItemRequest:
            type: object
            properties:
                itemId:
                    type: string
                    description: 道具ID
            description: 使用道具
        api.community.v1.Category:
            type: object
            properties:
                id:
                    type: string
                    description: 分类ID
                name:
                    type: string
                    description: 分类名称
            description: 帖子分类
        api.community.v1.Comment:
            type: object
            properties:
                id:
                    type: string
                    description: 评论ID
                user:
                    allOf:
                        - $ref: '#/components/schemas/api.community.v1.UserBrief'
                    description: 评论者
                content:
                    type: string
                    description: 内容（建议<=500字）
                likedCount:
                    type: integer
                    description: 点赞数
                    format: int32
                createdAt:
                    type: string
                    description: 创建时间 YYYY-MM-DD HH:MM:SS
                isLiked:
                    type: boolean
                    description: 当前用户是否点赞
            description: 评论
        api.community.v1.CreateCommentReply:
            type: object
            properties:
                id:
                    type: string
                    description: 新评论ID
        api.community.v1.CreateCommentRequest:
            type: object
            properties:
                postId:
                    type: string
                content:
                    type: string
        api.community.v1.CreatePostReply:
            type: object
            properties:
                id:
                    type: string
                    description: 新帖ID
        api.community.v1.CreatePostRequest:
            type: object
            properties:
                categoryId:
                    type: string
                    description: 分类ID（可空，为0或缺省则不归类）
                title:
                    type: string
                    description: 标题（可选，建议<=50字）
                content:
                    type: string
                    description: 文本内容（当 post_type=0 时必填，建议<=1000字）
                postType:
                    type: integer
                    description: 帖子类型：0=图文 1=视频（默认0）
                    format: int32
                imageUrls:
                    type: array
                    items:
                        type: string
                    description: 图文贴：图片URL列表（最多9张，至少1张）
                videoUrl:
                    type: string
                    description: 视频贴：视频URL（post_type=1 时必填）
                coverUrl:
                    type: string
                    description: 封面URL（可选，用于列表展示）
                locate:
                    type: string
                    description: 位置（可选）
                tags:
                    type: array
                    items:
                        type: string
                    description: 标签（可选）
                isPrivate:
                    type: boolean
                    description: 是否私密（默认false）
            description: 发帖
        api.community.v1.GetCategoriesReply:
            type: object
            properties:
                categories:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.community.v1.Category'
                    description: 分类列表
        api.community.v1.GetCommentListReply:
            type: object
            properties:
                total:
                    type: integer
                    description: 结果总条数
                    format: int32
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.community.v1.Comment'
                    description: 当前页评论列表
        api.community.v1.GetPostDetailReply:
            type: object
            properties:
                post:
                    allOf:
                        - $ref: '#/components/schemas/api.community.v1.Post'
                    description: 帖子详情
        api.community.v1.GetPostListReply:
            type: object
            properties:
                total:
                    type: integer
                    description: 结果总条数
                    format: int32
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.community.v1.Post'
                    description: 当前页帖子列表
        api.community.v1.LikeCommentReply:
            type: object
            properties:
                success:
                    type: boolean
                    description: 是否成功
        api.community.v1.LikePostReply:
            type: object
            properties:
                success:
                    type: boolean
                    description: 是否成功
        api.community.v1.Post:
            type: object
            properties:
                id:
                    type: string
                    description: 帖子ID
                user:
                    allOf:
                        - $ref: '#/components/schemas/api.community.v1.UserBrief'
                    description: 作者信息
                categoryId:
                    type: string
                    description: 分类ID
                title:
                    type: string
                    description: 标题
                content:
                    type: string
                    description: 文本内容
                postType:
                    type: integer
                    description: 帖子类型：0=图文 1=视频（与发布时保持一致）
                    format: int32
                imageUrls:
                    type: array
                    items:
                        type: string
                    description: 图片URL列表（图文）
                videoUrl:
                    type: string
                    description: 视频URL（视频）
                coverUrl:
                    type: string
                    description: 封面URL（可选，用于列表首帧展示）
                locate:
                    type: string
                    description: 位置文本（可选，例如城市/商圈）
                tags:
                    type: array
                    items:
                        type: string
                    description: 标签（可选，最多若干个，按业务约束）
                likedCount:
                    type: integer
                    description: 点赞数
                    format: int32
                commentCount:
                    type: integer
                    description: 评论数
                    format: int32
                createdAt:
                    type: string
                    description: 创建时间 YYYY-MM-DD HH:MM:SS
                isLiked:
                    type: boolean
                    description: 当前用户是否已点赞
                isPrivate:
                    type: boolean
                    description: 是否私密（私密仅自己可见）
            description: 帖子实体
        api.community.v1.UnlikeCommentReply:
            type: object
            properties:
                success:
                    type: boolean
                    description: 是否成功
        api.community.v1.UnlikePostReply:
            type: object
            properties:
                success:
                    type: boolean
                    description: 是否成功
        api.community.v1.UserBrief:
            type: object
            properties:
                id:
                    type: string
                    description: 用户ID
                nickname:
                    type: string
                    description: 昵称
                avatar:
                    type: string
                    description: 头像URL
                isFollowed:
                    type: boolean
                    description: 当前登录用户是否已关注该作者
            description: 用户简要信息（用于帖子/评论作者）
        api.message.v1.GetMessageListReply:
            type: object
            properties:
                total:
                    type: integer
                    description: 总条数
                    format: int32
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.message.v1.Message'
                    description: 当前页消息列表
            description: 消息列表响应
        api.message.v1.Message:
            type: object
            properties:
                id:
                    type: string
                    description: 消息ID
                sender:
                    type: integer
                    description: 发送方：0=用户 1=AI
                    format: int32
                messageType:
                    type: integer
                    description: 消息类型：0=聊天 1=小纸条
                    format: int32
                isLocked:
                    type: boolean
                    description: 小纸条是否锁定
                unlockCoins:
                    type: integer
                    description: 小纸条解锁所需金币
                    format: int32
                content:
                    type: string
                    description: 文本内容（锁定时可为空或返回占位）
                createdAt:
                    type: string
                    description: 创建时间 YYYY-MM-DD HH:MM:SS
            description: 消息体
        api.message.v1.UnlockMessageReply:
            type: object
            properties:
                success:
                    type: boolean
                    description: 是否成功（金币足够且状态有效）
                remainingCoins:
                    type: integer
                    description: 解锁后剩余金币（未开启金币体系时可为0）
                    format: int32
                message:
                    allOf:
                        - $ref: '#/components/schemas/api.message.v1.Message'
                    description: 解锁后的完整消息
            description: 解锁小纸条响应
        api.message.v1.UnlockMessageRequest:
            type: object
            properties:
                messageId:
                    type: string
                    description: 目标消息ID
            description: 解锁小纸条请求
        api.upload.v1.GetPresignReply:
            type: object
            properties:
                url:
                    type: string
                    description: 直传地址（PUT/POST）
                method:
                    type: string
                    description: 使用方法：PUT/POST
                headers:
                    type: object
                    additionalProperties:
                        type: string
                    description: 直传需要携带的HTTP头
                finalUrl:
                    type: string
                    description: 上传完成后的可访问URL
            description: 预签名响应
        api.upload.v1.UploadDoneReply:
            type: object
            properties:
                url:
                    type: string
                    description: 确认后的访问URL（可与入参相同）
            description: 上传完成登记响应
        api.upload.v1.UploadDoneRequest:
            type: object
            properties:
                url:
                    type: string
                    description: 已上传对象的访问URL
            description: 上传完成登记请求
        api.upload.v1.UploadFileReply:
            type: object
            properties:
                url:
                    type: string
                    description: 可访问 URL（以 public_prefix 开头，如 /static/...）
            description: 表单上传响应
        api.upload.v1.UploadFileRequest:
            type: object
            properties:
                type:
                    type: string
                    description: 资源类别（avatar/image/video），也可由表单字段传入（缺省=image）
            description: 表单上传请求
        api.user.v1.FollowUserReply:
            type: object
            properties:
                success:
                    type: boolean
                    description: 是否成功
        api.user.v1.FollowUserRequest:
            type: object
            properties:
                targetUserId:
                    type: string
            description: 关注请求
        api.user.v1.GetFollowListReply:
            type: object
            properties:
                total:
                    type: integer
                    description: 总条数
                    format: int32
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.user.v1.UserBrief'
                    description: 关注列表
        api.user.v1.GetLikeListReply:
            type: object
            properties:
                total:
                    type: integer
                    description: 总条数
                    format: int32
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.user.v1.PostBrief'
                    description: 点赞过的帖子列表
        api.user.v1.GetUserProfileReply:
            type: object
            properties:
                avatar:
                    type: string
                    description: 头像URL
                nickname:
                    type: string
                    description: 昵称
                petName:
                    type: string
                    description: 宠物名称
                petSex:
                    type: integer
                    description: 宠物性别 0未知/1男/2女
                    format: int32
                kind:
                    type: string
                    description: 宠物品类
                weight:
                    type: integer
                    description: 体重(kg)
                    format: int32
                hobby:
                    type: string
                    description: 爱好
                description:
                    type: string
                    description: 简介
                posts:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.user.v1.PostBrief'
                    description: 最近的帖子（按时间倒序，条数由服务端控制）
                isFollowed:
                    type: boolean
                    description: 当前登录用户是否已关注该用户
            description: 用户主页响应
        api.user.v1.PostBrief:
            type: object
            properties:
                id:
                    type: string
                    description: 帖子ID
                title:
                    type: string
                    description: 标题（可为空）
                postType:
                    type: integer
                    description: 帖子类型：0=图文 1=视频
                    format: int32
                coverUrl:
                    type: string
                    description: 封面URL（可为空）
                likedCount:
                    type: integer
                    description: 点赞数
                    format: int32
                createdAt:
                    type: string
                    description: 创建时间 YYYY-MM-DD HH:MM:SS
            description: 帖子简要信息（用于主页/点赞列表）
        api.user.v1.UnfollowUserReply:
            type: object
            properties:
                success:
                    type: boolean
                    description: 是否成功
        api.user.v1.UnfollowUserRequest:
            type: object
            properties:
                targetUserId:
                    type: string
            description: 取消关注请求
        api.user.v1.UserBrief:
            type: object
            properties:
                id:
                    type: string
                    description: 用户ID
                nickname:
                    type: string
                    description: 昵称
                avatar:
                    type: string
                    description: 头像URL
            description: 用户简要
tags:
    - name: AuthService
      description: |-
        认证服务（JWT）
         - 登录成功签发 JWT，前端需在后续所有请求 Header 中携带：
           Authorization: Bearer <token>
         - 所有时间字段统一为字符串格式：YYYY-MM-DD HH:MM:SS
    - name: AvatarService
      description: |-
        虚拟形象/道具/聊天 服务
         - 模型：列出可用宠物模型并可切换
         - 道具：列出与使用（消费金币或数量的策略在服务端控制）
         - 聊天：向 AI 发送一条消息，可选返回 AI 的同步应答
    - name: CommunityService
      description: |-
        社区服务
         - 分类：列出帖子分类
         - 帖子：列表/详情/发帖/点赞
         - 评论：列表/发表/点赞
    - name: MessageService
      description: |-
        消息/小纸条服务
         - 列表：按时间倒序分页
         - 小纸条解锁：扣金币并返回完整内容
    - name: UploadService
      description: |-
        上传服务
         当前实现：后端中转保存到本地服务器目录，并返回可访问 URL
         说明：
         - 统一入口 /v1/upload/file，表单字段：file（必填），type（可选：avatar/image/video）
         - 资源会保存到 {local_root}/{type}/{YYYY/MM/DD}/ 文件夹
         - 返回可直接访问的 URL（以 public_prefix 开头，如 /static/...）
    - name: UserService
      description: |-
        用户关系与主页服务
         - 关注/取关：当前登录用户对目标用户的关系
         - 主页：展示用户基础资料与最近的帖子
         - 列表：关注列表、点赞过的帖子列表
