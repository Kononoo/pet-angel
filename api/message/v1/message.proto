syntax = "proto3";

package api.message.v1;

import "google/api/annotations.proto";

option go_package = "pet-angel/api/message/v1;v1";

// 消息/小纸条服务
// - 列表：按时间倒序分页
// - 小纸条解锁：扣金币并返回完整内容
service MessageService {
  // 获取消息列表（包含聊天与小纸条）
  rpc GetMessageList(GetMessageListRequest) returns (GetMessageListReply) {
    option (google.api.http) = { get: "/v1/message/list" };
  }
  // 解锁一条小纸条（message_type=1）
  rpc UnlockMessage(UnlockMessageRequest) returns (UnlockMessageReply) {
    option (google.api.http) = { post: "/v1/message/{message_id}/unlock" body: "*" };
  }
}

// 消息体
message Message {
  // 消息ID
  int64 id = 1;
  // 发送方：0=用户 1=AI
  int32 sender = 2;
  // 消息类型：0=聊天 1=小纸条
  int32 message_type = 3;
  // 小纸条是否锁定
  bool is_locked = 4;
  // 小纸条解锁所需金币
  int32 unlock_coins = 5;
  // 文本内容（锁定时可为空或返回占位）
  string content = 6;
  // 创建时间 YYYY-MM-DD HH:MM:SS
  string created_at = 7;
}

// 消息列表请求
message GetMessageListRequest {
  // 页码，从1开始（默认1）
  int32 page = 1;
  // 每页条数（默认20，最大100）
  int32 page_size = 2;
  // 仅小纸条（true=只返回 message_type=1）
  bool only_notes = 3;
}
// 消息列表响应
message GetMessageListReply {
  // 总条数
  int32 total = 1;
  // 当前页消息列表
  repeated Message list = 2;
}

// 解锁小纸条请求
message UnlockMessageRequest {
  // 目标消息ID
  int64 message_id = 1;
}
// 解锁小纸条响应
message UnlockMessageReply {
  // 是否成功（金币足够且状态有效）
  bool success = 1;
  // 解锁后剩余金币（未开启金币体系时可为0）
  int32 remaining_coins = 2;
  // 解锁后的完整消息
  Message message = 3;
}