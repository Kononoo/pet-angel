// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v5.29.3
// source: upload/v1/upload.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 表单上传请求
type UploadFileRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 资源类别（avatar/image/video），也可由表单字段传入（缺省=image）
	Type          string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadFileRequest) Reset() {
	*x = UploadFileRequest{}
	mi := &file_upload_v1_upload_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileRequest) ProtoMessage() {}

func (x *UploadFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_upload_v1_upload_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileRequest.ProtoReflect.Descriptor instead.
func (*UploadFileRequest) Descriptor() ([]byte, []int) {
	return file_upload_v1_upload_proto_rawDescGZIP(), []int{0}
}

func (x *UploadFileRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

// 表单上传响应
type UploadFileReply struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 可访问 URL（以 public_prefix 开头，如 /static/...）
	Url           string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadFileReply) Reset() {
	*x = UploadFileReply{}
	mi := &file_upload_v1_upload_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadFileReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileReply) ProtoMessage() {}

func (x *UploadFileReply) ProtoReflect() protoreflect.Message {
	mi := &file_upload_v1_upload_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileReply.ProtoReflect.Descriptor instead.
func (*UploadFileReply) Descriptor() ([]byte, []int) {
	return file_upload_v1_upload_proto_rawDescGZIP(), []int{1}
}

func (x *UploadFileReply) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

// 预签名请求
type GetPresignRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 原始文件名（含扩展名）
	FileName string `protobuf:"bytes,1,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	// MIME 类型（如 image/png）
	ContentType   string `protobuf:"bytes,2,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPresignRequest) Reset() {
	*x = GetPresignRequest{}
	mi := &file_upload_v1_upload_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPresignRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPresignRequest) ProtoMessage() {}

func (x *GetPresignRequest) ProtoReflect() protoreflect.Message {
	mi := &file_upload_v1_upload_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPresignRequest.ProtoReflect.Descriptor instead.
func (*GetPresignRequest) Descriptor() ([]byte, []int) {
	return file_upload_v1_upload_proto_rawDescGZIP(), []int{2}
}

func (x *GetPresignRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *GetPresignRequest) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

// 预签名响应
type GetPresignReply struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 直传地址（PUT/POST）
	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	// 使用方法：PUT/POST
	Method string `protobuf:"bytes,2,opt,name=method,proto3" json:"method,omitempty"`
	// 直传需要携带的HTTP头
	Headers map[string]string `protobuf:"bytes,3,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// 上传完成后的可访问URL
	FinalUrl      string `protobuf:"bytes,4,opt,name=final_url,json=finalUrl,proto3" json:"final_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPresignReply) Reset() {
	*x = GetPresignReply{}
	mi := &file_upload_v1_upload_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPresignReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPresignReply) ProtoMessage() {}

func (x *GetPresignReply) ProtoReflect() protoreflect.Message {
	mi := &file_upload_v1_upload_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPresignReply.ProtoReflect.Descriptor instead.
func (*GetPresignReply) Descriptor() ([]byte, []int) {
	return file_upload_v1_upload_proto_rawDescGZIP(), []int{3}
}

func (x *GetPresignReply) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *GetPresignReply) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *GetPresignReply) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *GetPresignReply) GetFinalUrl() string {
	if x != nil {
		return x.FinalUrl
	}
	return ""
}

// 上传完成登记请求
type UploadDoneRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 已上传对象的访问URL
	Url           string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadDoneRequest) Reset() {
	*x = UploadDoneRequest{}
	mi := &file_upload_v1_upload_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadDoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadDoneRequest) ProtoMessage() {}

func (x *UploadDoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_upload_v1_upload_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadDoneRequest.ProtoReflect.Descriptor instead.
func (*UploadDoneRequest) Descriptor() ([]byte, []int) {
	return file_upload_v1_upload_proto_rawDescGZIP(), []int{4}
}

func (x *UploadDoneRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

// 上传完成登记响应
type UploadDoneReply struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 确认后的访问URL（可与入参相同）
	Url           string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadDoneReply) Reset() {
	*x = UploadDoneReply{}
	mi := &file_upload_v1_upload_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadDoneReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadDoneReply) ProtoMessage() {}

func (x *UploadDoneReply) ProtoReflect() protoreflect.Message {
	mi := &file_upload_v1_upload_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadDoneReply.ProtoReflect.Descriptor instead.
func (*UploadDoneReply) Descriptor() ([]byte, []int) {
	return file_upload_v1_upload_proto_rawDescGZIP(), []int{5}
}

func (x *UploadDoneReply) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

var File_upload_v1_upload_proto protoreflect.FileDescriptor

const file_upload_v1_upload_proto_rawDesc = "" +
	"\n" +
	"\x16upload/v1/upload.proto\x12\rapi.upload.v1\x1a\x1cgoogle/api/annotations.proto\"'\n" +
	"\x11UploadFileRequest\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\"#\n" +
	"\x0fUploadFileReply\x12\x10\n" +
	"\x03url\x18\x01 \x01(\tR\x03url\"S\n" +
	"\x11GetPresignRequest\x12\x1b\n" +
	"\tfile_name\x18\x01 \x01(\tR\bfileName\x12!\n" +
	"\fcontent_type\x18\x02 \x01(\tR\vcontentType\"\xdb\x01\n" +
	"\x0fGetPresignReply\x12\x10\n" +
	"\x03url\x18\x01 \x01(\tR\x03url\x12\x16\n" +
	"\x06method\x18\x02 \x01(\tR\x06method\x12E\n" +
	"\aheaders\x18\x03 \x03(\v2+.api.upload.v1.GetPresignReply.HeadersEntryR\aheaders\x12\x1b\n" +
	"\tfinal_url\x18\x04 \x01(\tR\bfinalUrl\x1a:\n" +
	"\fHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"%\n" +
	"\x11UploadDoneRequest\x12\x10\n" +
	"\x03url\x18\x01 \x01(\tR\x03url\"#\n" +
	"\x0fUploadDoneReply\x12\x10\n" +
	"\x03url\x18\x01 \x01(\tR\x03url2\xd3\x02\n" +
	"\rUploadService\x12j\n" +
	"\n" +
	"UploadFile\x12 .api.upload.v1.UploadFileRequest\x1a\x1e.api.upload.v1.UploadFileReply\"\x1a\x82\xd3\xe4\x93\x02\x14:\x01*\"\x0f/v1/upload/file\x12j\n" +
	"\n" +
	"GetPresign\x12 .api.upload.v1.GetPresignRequest\x1a\x1e.api.upload.v1.GetPresignReply\"\x1a\x82\xd3\xe4\x93\x02\x14\x12\x12/v1/upload/presign\x12j\n" +
	"\n" +
	"UploadDone\x12 .api.upload.v1.UploadDoneRequest\x1a\x1e.api.upload.v1.UploadDoneReply\"\x1a\x82\xd3\xe4\x93\x02\x14:\x01*\"\x0f/v1/upload/doneB\x1cZ\x1apet-angel/api/upload/v1;v1b\x06proto3"

var (
	file_upload_v1_upload_proto_rawDescOnce sync.Once
	file_upload_v1_upload_proto_rawDescData []byte
)

func file_upload_v1_upload_proto_rawDescGZIP() []byte {
	file_upload_v1_upload_proto_rawDescOnce.Do(func() {
		file_upload_v1_upload_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_upload_v1_upload_proto_rawDesc), len(file_upload_v1_upload_proto_rawDesc)))
	})
	return file_upload_v1_upload_proto_rawDescData
}

var file_upload_v1_upload_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_upload_v1_upload_proto_goTypes = []any{
	(*UploadFileRequest)(nil), // 0: api.upload.v1.UploadFileRequest
	(*UploadFileReply)(nil),   // 1: api.upload.v1.UploadFileReply
	(*GetPresignRequest)(nil), // 2: api.upload.v1.GetPresignRequest
	(*GetPresignReply)(nil),   // 3: api.upload.v1.GetPresignReply
	(*UploadDoneRequest)(nil), // 4: api.upload.v1.UploadDoneRequest
	(*UploadDoneReply)(nil),   // 5: api.upload.v1.UploadDoneReply
	nil,                       // 6: api.upload.v1.GetPresignReply.HeadersEntry
}
var file_upload_v1_upload_proto_depIdxs = []int32{
	6, // 0: api.upload.v1.GetPresignReply.headers:type_name -> api.upload.v1.GetPresignReply.HeadersEntry
	0, // 1: api.upload.v1.UploadService.UploadFile:input_type -> api.upload.v1.UploadFileRequest
	2, // 2: api.upload.v1.UploadService.GetPresign:input_type -> api.upload.v1.GetPresignRequest
	4, // 3: api.upload.v1.UploadService.UploadDone:input_type -> api.upload.v1.UploadDoneRequest
	1, // 4: api.upload.v1.UploadService.UploadFile:output_type -> api.upload.v1.UploadFileReply
	3, // 5: api.upload.v1.UploadService.GetPresign:output_type -> api.upload.v1.GetPresignReply
	5, // 6: api.upload.v1.UploadService.UploadDone:output_type -> api.upload.v1.UploadDoneReply
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_upload_v1_upload_proto_init() }
func file_upload_v1_upload_proto_init() {
	if File_upload_v1_upload_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_upload_v1_upload_proto_rawDesc), len(file_upload_v1_upload_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_upload_v1_upload_proto_goTypes,
		DependencyIndexes: file_upload_v1_upload_proto_depIdxs,
		MessageInfos:      file_upload_v1_upload_proto_msgTypes,
	}.Build()
	File_upload_v1_upload_proto = out.File
	file_upload_v1_upload_proto_goTypes = nil
	file_upload_v1_upload_proto_depIdxs = nil
}
