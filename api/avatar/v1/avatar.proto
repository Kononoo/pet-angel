syntax = "proto3";

package api.avatar.v1;

import "google/api/annotations.proto";

option go_package = "pet-angel/api/avatar/v1;v1";

// 虚拟形象/道具/聊天 服务
// - 模型：列出可用宠物模型并可切换
// - 道具：列出与使用（消费金币或数量的策略在服务端控制）
// - 聊天：向 AI 发送一条消息，可选返回 AI 的同步应答
service AvatarService {
  // 获取可用的宠物模型列表
  rpc GetModels(GetModelsRequest) returns (GetModelsReply) {
    option (google.api.http) = { get: "/v1/avatar/models" };
  }
  // 设置当前宠物模型
  rpc SetPetModel(SetPetModelRequest) returns (SetPetModelReply) {
    option (google.api.http) = { post: "/v1/avatar/model" body: "*" };
  }
  // 获取道具列表
  rpc GetItems(GetItemsRequest) returns (GetItemsReply) {
    option (google.api.http) = { get: "/v1/avatar/items" };
  }
  // 使用一个道具（例如喂食/玩具等）
  rpc UseItem(UseItemRequest) returns (UseItemReply) {
    option (google.api.http) = { post: "/v1/avatar/use-item" body: "*" };
  }
  // 发送一条聊天消息给 AI（同步返回本条消息；可选返回AI的即时回复）
  rpc Chat(ChatRequest) returns (ChatReply) {
    option (google.api.http) = { post: "/v1/avatar/chat" body: "*" };
  }
  // 流式聊天（服务端以 SSE 持续返回 AI 回复片段；前端逐段渲染）
  // 备注：本接口仅支持 HTTP，GRPC 下可另行定义 bidi-stream。
  rpc ChatStream(ChatRequest) returns (ChatReply) {
    option (google.api.http) = { post: "/v1/avatar/chat/stream" body: "*" };
  }
}

// 宠物模型
message PetModel {
  // 模型ID
  int64 id = 1;
  // 模型名称
  string name = 2;
  // 模型资源URL（MinIO）
  string path = 3;
  // 模型类型：0=猫 1=狗
  int32 model_type = 4;
  // 是否默认
  bool is_default = 5;
  // 排序序号（数值越小越靠前）
  int32 sort_order = 6;
}

message GetModelsRequest {}
message GetModelsReply {
  // 模型列表
  repeated PetModel models = 1;
}

// 设置当前模型
message SetPetModelRequest {
  // 目标模型ID
  int64 model_id = 1;
}
message SetPetModelReply {
  // 是否成功
  bool success = 1;
}

// 道具
message Item {
  // 道具ID
  int64 id = 1;
  // 道具名称
  string name = 2;
  // 描述文案
  string description = 3;
  // 图标URL
  string icon_path = 4;
  // 消耗金币
  int32 coin_cost = 5;
}
message GetItemsRequest {}
message GetItemsReply {
  // 道具列表
  repeated Item items = 1;
}

// 使用道具
message UseItemRequest {
  // 道具ID
  int64 item_id = 1;
}
message UseItemReply {
  // 是否成功
  bool success = 1;
  // 使用结果与提示（例如：喂食成功）
  string message = 2;
}

// 聊天
message ChatRequest {
  // 用户输入的文本内容
  string content = 1;
}
message ChatReply {
  // 本次用户消息的ID
  int64 message_id = 1;
  // 本次用户消息内容回显
  string content = 2;
  // 发送时间 YYYY-MM-DD HH:MM:SS
  string created_at = 3;
  // （可选）AI 回复的消息ID
  int64 ai_message_id = 4;
  // （可选）AI 回复的文本
  string ai_content = 5;
  // （可选）AI 回复时间 YYYY-MM-DD HH:MM:SS
  string ai_created_at = 6;
} 